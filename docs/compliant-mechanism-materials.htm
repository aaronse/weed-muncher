<!-- 
 https://chatgpt.com/c/67ec7215-6aa0-800b-b3f0-4871d712e58c 
 -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Flexure Mechanism Filaments 🛠️✨</title>
  <style>
    body {
      background-color: #121212;
      color: #e0e0e0;
      font-family: 'Segoe UI', sans-serif;
      padding: 2rem;
    }
    h1 {
      text-align: center;
      color: #ffd700;
      font-size: 2.5rem;
      margin-bottom: 1rem;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      background-color: #1e1e1e;
      box-shadow: 0 0 20px rgba(255, 215, 0, 0.3);
      border-radius: 12px;
      overflow: hidden;
    }
    th, td {
      padding: 1rem;
      border: 1px solid #333;
      text-align: center;
    }
    th {
      background-color: #2a2a2a;
      color: #ffd700;
    }
    tr:nth-child(even) {
      background-color: #252525;
    }
    .winner {
      background-color: #444444;
      color: #00ffcc;
      font-weight: bold;
      position: relative;
    }
    .fireworks-canvas {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: 1;
    }
  </style>
</head>
<body>
  <h1>🏆 Best 3D Printing Filaments for Flexure Mechanisms 🧠🖨️</h1>
  <table>
    <thead>
      <tr>
        <th>Rank</th>
        <th>Material Type</th>
        <th>Flexibility</th>
        <th>Fatigue Resistance</th>
        <th>Layer Adhesion</th>
        <th>Creep Resistance</th>
        <th>Printability</th>
        <th>Notes</th>
      </tr>
    </thead>
    <tbody>
      <tr class="winner">
        <td>🥇 1</td>
        <td>Nylon (PA12, PA6) 🎯</td>
        <td>★★☆☆☆</td>
        <td>⭐⭐⭐⭐⭐</td>
        <td>⭐⭐⭐⭐</td>
        <td>⭐⭐⭐⭐</td>
        <td>⭐⭐⭐</td>
        <td>Tough and durable. Needs dry storage, tends to warp.</td>
      </tr>
      <tr>
        <td>2</td>
        <td>TPU (85A–95A) 🧽</td>
        <td>★☆☆☆☆</td>
        <td>⭐⭐⭐⭐⭐</td>
        <td>⭐⭐⭐</td>
        <td>⭐⭐⭐</td>
        <td>⭐⭐⭐⭐</td>
        <td>Super flexible, soft and low precision.</td>
      </tr>
      <tr>
        <td>3</td>
        <td>PETG 🍬</td>
        <td>★★★☆☆</td>
        <td>⭐⭐⭐⭐</td>
        <td>⭐⭐⭐⭐</td>
        <td>⭐⭐⭐</td>
        <td>⭐⭐⭐⭐</td>
        <td>Good stiffness + toughness. Great for flexures.</td>
      </tr>
      <tr>
        <td>4</td>
        <td>Polypropylene (PP) 🌀</td>
        <td>★★☆☆☆</td>
        <td>⭐⭐⭐⭐⭐</td>
        <td>⭐⭐⭐</td>
        <td>⭐⭐⭐⭐⭐</td>
        <td>⭐⭐</td>
        <td>Excellent fatigue, poor bed adhesion.</td>
      </tr>
      <tr>
        <td>5</td>
        <td>PLA+ (Tough PLA) 🧱</td>
        <td>★★★☆☆</td>
        <td>⭐⭐⭐</td>
        <td>⭐⭐⭐⭐</td>
        <td>⭐⭐</td>
        <td>⭐⭐⭐⭐⭐</td>
        <td>Decent flex for occasional stress.</td>
      </tr>
      <tr>
        <td>6</td>
        <td>ABS 🧨</td>
        <td>★★☆☆☆</td>
        <td>⭐⭐</td>
        <td>⭐⭐</td>
        <td>⭐⭐⭐</td>
        <td>⭐⭐</td>
        <td>Can flex a bit. Cracks with age.</td>
      </tr>
      <tr>
        <td>7</td>
        <td>PC (Polycarbonate) 🧬</td>
        <td>★★★★☆</td>
        <td>⭐⭐⭐</td>
        <td>⭐⭐</td>
        <td>⭐⭐⭐⭐⭐</td>
        <td>⭐⭐</td>
        <td>Strong and springy. Tricky adhesion.</td>
      </tr>
      <tr>
        <td>8</td>
        <td>PLA (standard) 📏</td>
        <td>★★★★☆</td>
        <td>⭐</td>
        <td>⭐⭐⭐⭐</td>
        <td>⭐</td>
        <td>⭐⭐⭐⭐⭐</td>
        <td>Brittle. OK for static flex.</td>
      </tr>
    </tbody>
  </table>

  <!-- Fireworks animation using Three.js -->
  <canvas class="fireworks-canvas" id="fireworks"></canvas>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
  <script>
    const canvas = document.getElementById("fireworks");
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth / canvas.clientHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({ canvas, alpha: true });
    renderer.setSize(canvas.clientWidth, canvas.clientHeight);

    const particles = new THREE.Geometry();
    const material = new THREE.PointsMaterial({ color: 0xffd700, size: 2 });
    for (let i = 0; i < 100; i++) {
      const vertex = new THREE.Vector3(
        (Math.random() - 0.5) * 4,
        (Math.random() - 0.5) * 4,
        (Math.random() - 0.5) * 4
      );
      particles.vertices.push(vertex);
    }
    const firework = new THREE.Points(particles, material);
    scene.add(firework);
    camera.position.z = 5;

    function animate() {
      requestAnimationFrame(animate);
      firework.rotation.x += 0.01;
      firework.rotation.y += 0.01;
      renderer.render(scene, camera);
    }
    animate();
  </script>
</body>
</html>
